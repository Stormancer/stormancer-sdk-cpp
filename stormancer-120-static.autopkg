configurations {
     Toolset {
        key : "PlatformToolset";
        choices: { v140, v140_xp, v120, v120_xp, v110, v110_xp, v100, v90, v80, v71, v70, v60, gcc };
    };
	
	Platform {
        key : "Platform";
        choices: { Win32, x64, ARM, AnyCPU };
        Win32.aliases : { x86, win32, ia32, 386 };
        x64.aliases : { x64, amd64, em64t, intel64, x86-64, x86_64 };
        ARM.aliases : { arm, woa };
        AnyCPU.aliases : { anycpu, any };
    };


}

nuget {


    #defines {
         // Variable definitions specific to this node (ie. "nuget").
        // Only available while inside this scope.
        // This metadata is not needed for most packages and is typically omitted.
    };


    // The nuspec file metadata.
    nuspec {

        // Unique package identifier
        id = StormancerClient.Native.120;

        // Version number. Follows NuGet standards. (currently SemVer 1.0)
        version : 2.2.0-pre;

        // Display name for package.
        title: Stormancer native client for VS2013;

        // List of package authors.  Braces may be ommited if only one author.
        authors: {jmderuty};

        // List of owners.  Braces may be ommited if only one author.
        // Ignored by the default NuGet repository.
        owners: {jmderuty};

        // URL link to the license this package is released under.
        licenseUrl: "http://directory.fsf.org/wiki/License:Apache2.0";

        // URL to the project website (if any).
        projectUrl: "http://www.stormancer.com"; 

        // URL to an image to be used for package icons.
        iconUrl: "http://mysite.info/myproject/logo.png"; 

        // If the license this package is being released
        // under has use restrictions, set this to "true".
        requireLicenseAcceptance:false; 

        // Brief summary of the package contents. Keep it short!
        summary:Stormancer Cpp client library for VS2013; 

        // Extended description of the package contents.                                           
        description: Connect to the realtime Stormancer server; 

        // Brief notes about this version of the package.                                          
        releaseNotes: "Public release!";  

        // Copyright notice.
        copyright: Copyright 2016;       

        // Tags of arbitrary text for categorizing and filtering.
        tags: { stormancer, native, network }; 

    };


    #output-packages {
        // Output file definitions.  These are covered in detail in Output Files.
        // This metadata is not needed for most packages and is typically omitted.
    }


    dependencies {
        // This node defines any outside items which may be needed to consume this package.
        packages : {
            // This is a list of other NuGet packages required to use this package.
            // Each item follows the format "<pkg_name>/<version>"
            
        };
    }


    files {
        // File location information.  This node is critical for all packages, and is
        // where much of the effort is.  All file paths are relative to this .autopkg
        // file's location.

        // This node is frequently divided by multiple condition statements or rules.
        // Below is an example of how a typical package might be described.
        // For the below examples, we assume that this file is in
        //      <src_root>\contrib\coapp\
        // and that the compiled libraries are in a semi-logical directory tree in
        //      <src_root>\output\.

        // All .h and .hpp  files in <src_root>\include, but not in subdirectories.
        // Included for all conditions.
       

        // All files in <src_root>\doc\, including all subdirectories recursively.
        // Included for all conditions.
        docs: {   }; 

        // Include these specific files in the libpath and "copy to output" path only
        // under these pivot conditions.
		[x64,dynamic, v120,Release]{
			lib: { output\libs\stormancer120_Release_x64.lib };
			 include: { output\include\**\* }; 
		}
		
       	[x64,dynamic, v120,Debug]{
			lib: { output\libs\stormancer120_Debug_x64.lib };
			 include: { output\include\**\* }; 
		}
       
	    [win32,dynamic, v120,Release]{
			lib: { output\libs\stormancer120_Release_win32.lib };
			 include: { output\include\**\* }; 
		}
		[win32,dynamic, v120,Debug]{
			lib: { output\libs\stormancer120_Debug_win32.lib };
			 include: { output\include\**\* }; 
		}

    };


    props {
        // Additional declarations to insert into consuming projects before most of the
        // project settings. (These may be modified in visual studio by a developer
        // consuming this package.)
        // This node is typically not needed for most packages and may be omitted.
    }


    targets {
        // Additional declarations to insert into consuming projects after most of the
        // project settings. (These may NOT be modified in visual studio by a developer
        // consuming this package.)
        // This node is often used to set defines that are required that must be set by
        // the consuming project in order to correctly link to the libraries in this
        // package.  Such defines may be set either globally or only set under specific
        // conditions.
        Defines += HAS_STORMANCER;
        //[dynamic]
        //    Defines += HAS_MyLib;
    }

}