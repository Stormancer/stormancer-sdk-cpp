<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
	<PropertyGroup>
		<!-- See https://mnaoumov.wordpress.com/2015/07/13/msbuild-custom-task-and-assembly-locks/ -->
		<TempFolder>$([System.IO.Path]::GetTempPath())storm$([System.Guid]::NewGuid())</TempFolder>
	</PropertyGroup>
  <ItemGroup>
		<TaskAssembly Condition=" '$(MSBuildRuntimeType)' == 'Core'" Include="$(StormancerSdkRoot)intermediate\PluginSelector\*" />
		<TaskAssembly Condition=" '$(MSBuildRuntimeType)' != 'Core'" Include="$(StormancerSdkRoot)intermediate\PluginSelector\*" />
    <JsonPluginList Include="$(StormancerSdkRoot)plugins.json" />
  </ItemGroup>
	<Target Name="CopyTaskAssemblyToTempFolder">
    <Copy SourceFiles="@(TaskAssembly)" DestinationFolder="$(TempFolder)" />
 	</Target>
  <UsingTask TaskName="PluginSelectorTask" AssemblyFile="$(TempFolder)\PluginSelector.dll" />
  <Target Name="SelectPlugins" BeforeTargets="PrepareForBuild" DependsOnTargets="CopyTaskAssemblyToTempFolder" Condition="Exists('@(JsonPluginList)')">
    <PluginSelectorTask PluginsDirectory="$(StormancerSdkRoot)Plugins" PluginListFile="@(JsonPluginList)">
      <Output TaskParameter="PluginSourceFiles" ItemName="EmbeddedPluginSources" />
      <Output TaskParameter="PluginPublicHeaderFiles" ItemName="EmbeddedPluginPublicHeaders" />
      <Output TaskParameter="PluginPrivateHeaderFiles" ItemName="EmbeddedPluginPrivateHeaders" />
    </PluginSelectorTask>
    <ItemGroup>
      <ClCompile Include="@(EmbeddedPluginSources)">
        <PrecompiledHeader>NotUsing</PrecompiledHeader> <!--TODO (maybe) Support pch in plugins ; STORMANCER_CUSTOM_PCH macro doesn't work-->
      </ClCompile>
      <ClInclude Include="@(EmbeddedPluginPrivateHeaders)" />
      <ClInclude Include="@(EmbeddedPluginPublicHeaders)" />
    </ItemGroup>
  </Target>
  
  <Target Name="GetGitVersion" BeforeTargets="PrepareForBuild">
	<Exec Command="git describe --dirty --match v[0-9].[0-9] --match v[0-9].[0-9].[0-9]" ConsoleToMsBuild="true" IgnoreExitCode="true">
		<Output TaskParameter="ConsoleOutput" PropertyName="GitDescribeOutput" />
		<Output TaskParameter="ExitCode" PropertyName="CmdExitCode" />
	</Exec>
	<Warning Condition="'$(CmdExitCode)' != 0" Text="Could not run git describe ; the library's version will not be set. Make sure git is installed and is in the PATH." />
	<Message Condition="'$(CmdExitCode)' == 0" Text="Git Describe Output: $(GitDescribeOutput)" />
	<!-- Do not keep the output if there was an error. This can happen if git is not installed, or if the git history is messed up somehow. -->
	<PropertyGroup Condition="'$(CmdExitCode)' != 0">
		<GitDescribeOutput></GitDescribeOutput>
	</PropertyGroup>
	<!-- Get the git hash, used for optional link-time version check. This one should work, even in case of a "broken" history -->
	<Exec Command="git describe --match=NeVeRmAtCh --always --abbrev=40 --dirty=_dirty" ConsoleToMsBuild="true" IgnoreExitCode="true" >
		<Output TaskParameter="ConsoleOutput" PropertyName="GitHash" />
		<Output TaskParameter="ExitCode" PropertyName="CmdExitCode" />
	</Exec>
	<PropertyGroup Condition="'$(CmdExitCode)' != 0">
		<GitHash>noversion</GitHash>
	</PropertyGroup>
	<ItemGroup>
		<ClCompile>
		  <PreprocessorDefinitions>STORM_VERSION="$(GitDescribeOutput)";STORM_VERSION_HASH=$(GitHash);%(PreprocessorDefinitions)</PreprocessorDefinitions>
		</ClCompile>
	</ItemGroup>
  </Target>
    
  <ItemGroup>
      <RxcppIncludes Include="$(StormancerSdkRoot)dependencies\rxcpp\Rx\v2\src\rxcpp\**\*.*" />
      <RestSdkIncludes
		Include="$(StormancerSdkRoot)dependencies\cpprestsdk\Release\include\**\*.*"
		Exclude="$(StormancerSdkRoot)dependencies\cpprestsdk\Release\include\stdafx.h"
	  />
      <MsgpackIncludes Include="$(StormancerSdkRoot)dependencies\msgpack-c\include\**\*.*" />
      <StormancerIncludes
		  Include="$(StormancerSdkRoot)stormancer\stormancer-sources\include\public\**\*.*"
		  Exclude="$(StormancerSdkRoot)stormancer\stormancer-sources\include\public\stormancer\Version.h"
	  />
      <BuildFiles Include="$(StormancerSdkRoot)Build\**\*.*" />
	  <HeaderFilesToCopy Include="@(BuildFiles->'$(StormancerOutputDir)build\%(RecursiveDir)%(Filename)%(Extension)');
		@(RxcppIncludes->'$(StormancerOutputDir)include\rxcpp\%(RecursiveDir)%(Filename)%(Extension)');
		@(RestSdkIncludes->'$(StormancerOutputDir)include\%(RecursiveDir)%(Filename)%(Extension)');
		@(MsgpackIncludes->'$(StormancerOutputDir)include\%(RecursiveDir)%(Filename)%(Extension)');
		@(StormancerIncludes->'$(StormancerOutputDir)include\%(RecursiveDir)%(Filename)%(Extension)')"
	  />
  </ItemGroup>

  <Target Name="AfterBuild">
	<!-- Remove headers that have been deleted in the source dir from the output dir -->
	<ItemGroup>
		<HeadersToBeRemoved
			Include="$(StormancerOutputDir)include\**\*.*"
			Exclude="@(HeaderFilesToCopy);$(StormancerOutputDir)include\stormancer\Version.h;@(EmbeddedPluginPublicHeaders->'$(StormancerOutputDir)include\%(PluginName)\%(Filename)%(Extension)')"
		/>
	</ItemGroup>
	<Delete Files="@(HeadersToBeRemoved)" />
    <Copy SourceFiles="@(BuildFiles)" DestinationFiles="@(BuildFiles->'$(StormancerOutputDir)build\%(RecursiveDir)%(Filename)%(Extension)')" SkipUnchangedFiles="true" />
    <Copy SourceFiles="@(RxcppIncludes)" DestinationFiles="@(RxcppIncludes->'$(StormancerOutputDir)include\rxcpp\%(RecursiveDir)%(Filename)%(Extension)')" SkipUnchangedFiles="true" />
    <Copy SourceFiles="@(RestSdkIncludes)" DestinationFiles="@(RestSdkIncludes->'$(StormancerOutputDir)include\%(RecursiveDir)%(Filename)%(Extension)')" SkipUnchangedFiles="true" />
    <Copy SourceFiles="@(MsgpackIncludes)" DestinationFiles="@(MsgpackIncludes->'$(StormancerOutputDir)include\%(RecursiveDir)%(Filename)%(Extension)')" SkipUnchangedFiles="true" />
    <Copy SourceFiles="@(StormancerIncludes)" DestinationFiles="@(StormancerIncludes->'$(StormancerOutputDir)include\%(RecursiveDir)%(Filename)%(Extension)')" SkipUnchangedFiles="true" />
  </Target>
  
  <Target Name="MakeVersionHeader" AfterTargets="AfterBuild">
  	<!-- Hardcode the version number into Version.h -->
	<ItemGroup>
		<!-- Use [System.IO.File]::ReadAllText() instead of the ReadLinesFromFile task, because the latter does not preserve whitespace. -->
		<BuildConfigContents Include="$([System.IO.File]::ReadAllText('$(StormancerSdkRoot)stormancer\stormancer-sources\include\public\stormancer\Version.h'))" />
		<BuildConfigVersioned Include="@(BuildConfigContents->Replace('#define STORM_VERSION %22%22', '#define STORM_VERSION %22$(GitDescribeOutput)%22'))" />
		<BuildConfigVersionedFinal Include="@(BuildConfigVersioned->Replace('#define STORM_VERSION_HASH noversion', '#define STORM_VERSION_HASH $(GitHash)'))" />
	</ItemGroup>
	<WriteLinesToFile
		File="$(StormancerOutputDir)include\stormancer\Version.h"
		Lines="@(BuildConfigVersionedFinal)"
		Overwrite="true"
		WriteOnlyWhenDifferent="true"
	/>
  </Target>
  
  <Target Name="CopyPluginHeaders" AfterTargets="AfterBuild"
	Inputs="@(EmbeddedPluginPublicHeaders)"
	Outputs="@(EmbeddedPluginPublicHeaders->'$(StormancerOutputDir)include\%(PluginName)\%(Filename)%(Extension)')"
  >
    <Copy SourceFiles="@(EmbeddedPluginPublicHeaders)" DestinationFiles="@(EmbeddedPluginPublicHeaders->'$(StormancerOutputDir)include\%(PluginName)\%(Filename)%(Extension)')" />
  </Target>
  
</Project>